% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{buildMixedQuery}
\alias{buildMixedQuery}
\title{build a mixed query with date and normal fields}
\usage{
buildMixedQuery(
  keys,
  values,
  type = c("equality", "not_equals", "less_than", "less_than_equals", "greater_than",
    "greater_than_equals", "exists", "intervals"),
  dateValue,
  dateFieldName = "gameDate",
  date_side = c("equality", "less_than", "less_than_equals", "greater_than",
    "greater_than_equals")
)
}
\arguments{
\item{keys}{character vector keys}

\item{values}{list same length as keys with the fields values.}

\item{type}{character query operator. Either of length 1 (and in this case it
will be recycled to be \code{length(values)}) or of same length as keys
if different type should be applied to different keys. Accepted values
are \code{"equality"} (for all types of values), \code{"not_equals"},
\code{"less_than"}, \code{"less_than_equals"}, \code{"greater_than"},
\code{"greater_than_equals"} (for numerical values only), \code{"exists"}
(for logiical values) and \code{"intervals"} (for numerical values only;
large bounds will be applied)}

\item{dateValue}{Date query value as a date object}

\item{dateFieldName}{character field name.}

\item{date_side}{character with possible values \code{"less_than"},
\code{"less_than_equals"}. \code{"equality"}, \code{"greater_than_equals"}
and \code{"greater_than"}.}
}
\value{
character query in JSON type
#' @examples
m = mongo("Fixture", "Examples")
## find all fixtures in competition 8 seasonId 2017, played after Feb 3, 2017
keys = list(competitionId = 8, seasonId = 2017)
qr = buildMixedQuery(names(keys), keys, dateValue = as.Date("2018-02-03"), date_side = "greater_than")
gameDates = m$distinct(gameDate", qr)
min(gameDates) ## expect it to be after 2018-02-03
}
\description{
build a mixed query with date and normal fields
}
